{"ast":null,"code":"import _slicedToArray from \"/Users/waleedhamza/Desktop/Contact-MERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/waleedhamza/Desktop/Contact-MERN/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './conactContext';\nimport ContactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENTt, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACT, CLEAR_FILTER } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 0,\n      name: 'Hannah',\n      email: 'hannah@gmail.com',\n      phone: '111-111-1111',\n      type: 'personal'\n    }, {\n      id: 1,\n      name: 'Grace',\n      email: 'Grace@gmail.com',\n      phone: '111-111-2222',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'Hudson',\n      email: 'Hudson@gmail.com',\n      phone: '111-111-3333',\n      type: 'personal'\n    }]\n  };\n\n  const _useReducer = useReducer(ContactReducer, ContactState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Add contact\n  //Delete contact\n  //Set current contact\n  //Clear current contact\n  // Update contact\n  //Filter contact\n  //Clear filter\n\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/waleedhamza/Desktop/Contact-MERN/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENTt","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","state","dispatch","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,YAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,cANJ,EAOIC,YAPJ,QAQM,UARN;;AAUA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAC,CACL;AACIC,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAE,QAFV;AAGIC,MAAAA,KAAK,EAAC,kBAHV;AAIIC,MAAAA,KAAK,EAAC,cAJV;AAKIC,MAAAA,IAAI,EAAC;AALT,KADK,EAQL;AACIJ,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAE,OAFV;AAGIC,MAAAA,KAAK,EAAC,iBAHV;AAIIC,MAAAA,KAAK,EAAC,cAJV;AAKIC,MAAAA,IAAI,EAAC;AALT,KARK,EAeL;AACIJ,MAAAA,EAAE,EAAC,CADP;AAEIC,MAAAA,IAAI,EAAE,QAFV;AAGIC,MAAAA,KAAK,EAAC,kBAHV;AAIIC,MAAAA,KAAK,EAAC,cAJV;AAKIC,MAAAA,IAAI,EAAC;AALT,KAfK;AADQ,GAArB;;AAD0B,sBA2BAnB,UAAU,CAACG,cAAD,EAAiBQ,YAAjB,CA3BV;AAAA;AAAA,QA2BnBS,KA3BmB;AAAA,QA2BZC,QA3BY,oBA6B1B;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;;;AAEA,SAEI,oBAAC,cAAD,CAAgB,QAAhB;AACA,IAAA,KAAK,EAAI;AACLP,MAAAA,QAAQ,EAAEM,KAAK,CAACN;AADX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,KAAK,CAACU,QALT,CAFJ;AAUH,CArDD","sourcesContent":["import React, {useReducer} from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './conactContext';\nimport ContactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENTt,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACT,\n    CLEAR_FILTER\n}from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts:[\n            {\n                id:0,\n                name: 'Hannah',\n                email:'hannah@gmail.com',\n                phone:'111-111-1111',\n                type:'personal'\n            },\n            {\n                id:1,\n                name: 'Grace',\n                email:'Grace@gmail.com',\n                phone:'111-111-2222',\n                type:'personal'\n            },\n            {\n                id:2,\n                name: 'Hudson',\n                email:'Hudson@gmail.com',\n                phone:'111-111-3333',\n                type:'personal'\n            }\n        ]\n    };\n\n    const [state, dispatch] = useReducer(ContactReducer, ContactState);\n\n    //Add contact\n\n    //Delete contact\n\n    //Set current contact\n\n    //Clear current contact\n\n    // Update contact\n\n    //Filter contact\n\n    //Clear filter\n \n    return (\n\n        <ContactContext.Provider\n        value = {{\n            contacts: state.contacts\n        }}\n        >\n          {props.children}\n        </ContactContext.Provider>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}